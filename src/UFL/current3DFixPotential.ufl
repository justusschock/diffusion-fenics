from ufl import *
    set_level(DEBUG)


cell = tetrahedron

scalar = FiniteElement("CG", cell, 1)

scalarMixed = MixedElement(scalar,scalar,scalar)

sigma= Coefficient(scalarMixed)
sigma_pos, sigma_electrolyte,sigma_neg  =split(sigma)

u=Coefficient(scalarMixed)
u0=Coefficient(scalarMixed)
u_pos, u_electrolyte, u_neg=split(u)
u0_pos, u0_electrolyte, u0_neg=split(u0)

RT = Coefficient(scalar)
U_eq = Coefficient(scalar)

v=TestFunction(scalarMixed)
v_pos, v_electrolyte,v_neg =split(v)
alpha = Coefficient(scalar)
i0= Coefficient(scalar)
k = Constant(cell)
C_pos = Constant(cell)
C_neg = Constant(cell)

n = FacetNormal(cell)

# TODO fix parallel capacity
# basic continuity 
a_pos = 0.5*k*(inner(sigma_pos*grad(u_pos), grad(v_pos))) - 0.5*k*(inner(sigma_pos*grad(u0_pos), grad(v_pos)))
a_neg = 0.5*k*(inner(sigma_neg*grad(u_neg), grad(v_neg))) - 0.5*k*(inner(sigma_neg* grad(u0_neg), grad(v_neg)))
a_electrolyte = 0.5*k*(inner(sigma_electrolyte*grad(u_electrolyte), grad(v_electrolyte))) - 0.5*k*(inner(sigma_electrolyte * grad(u0_electrolyte), grad(v_electrolyte)))

#Butler-Volmer-Equation with parallel capacity
bv_pos=0.5*k*(i0*(exp(alpha/(RT)*(u_pos-u_electrolyte-U_eq))-exp(-(1-alpha)/(RT)*(u_pos-u_electrolyte-U_eq))))+(u_pos-u_electrolyte)*C_pos \
        -(u0_pos-u0_electrolyte)*C_pos-0.5*k*(i0*(exp(alpha/(RT)*(u0_pos-u0_electrolyte-U_eq))-exp(-(1-alpha)/(RT)*(u0_pos-u0_electrolyte-U_eq))))

bv_neg=0.5*k*(i0*(exp(alpha/(RT)*(u_neg-u_electrolyte+U_eq))-exp(-(1-alpha)/(RT)*(u_neg-u_electrolyte+U_eq))))+(u_neg-u_electrolyte)*C_neg \
        -(u0_neg-u0_electrolyte)*C_neg-0.5*k*(i0*(exp(alpha/(RT)*(u0_neg-u0_electrolyte+U_eq))-exp(-(a-alpha)/(RT)*(u_neg-u0_electrolyte+U_eq)))

f=(a_neg*(dx(2)+dx(4))+a_pos*(dx(1)+dx(3)) +bv_pos*v_pos*dx(3)+bv_neg*v_neg*dx(4))#\
#+avg(sigma_pos)*dot(grad(u_pos)("+"),n("+"))*v_pos("+")*dS(141)+avg(sigma_neg)*dot(grad(u_neg)("+"),n("+"))*v_neg("+")*dS(140)


g=a_electrolyte*(dx(3)+dx(4)+dx(135))-bv_pos*v_electrolyte*dx(3)-bv_neg*v_electrolyte*dx(4)#\
#+avg(sigma_electrolyte)*dot(grad(u_electrolyte)("+"),n("+"))*v_electrolyte("+")*(dS(142)+dS(143))#+0*v_electrolyte*ds(139)+0*v_electrolyte("+")*(dS(140)+dS(141))


F=f+g
u_n=TrialFunction(scalarMixed)

J  = derivative(F,u,u_n)
