scalar = FiniteElement("DG", tetrahedron, 1)

scalarMixed = scalar*scalar

sigma= Coefficient(scalarMixed)
sigma_solid, sigma_electrolyte,  =split(sigma)

m=Coefficient(scalarMixed)
u=Coefficient(scalarMixed)
u_solid,u_electrolyte=split(u)
#u=u_solid,u_electrolyte

RT = Coefficient(scalar)
U_eq = Coefficient(scalar)

v=TestFunction(scalarMixed)
v_solid, v_electrolyte =split(v)
alpha = Coefficient(scalar)
i0= Coefficient(scalar)
n= Coefficient(scalar)
k= Coefficient(scalar)



# basic continuity 
a_solid = inner(sigma_solid*grad(u_solid), grad(v_solid))
a_electrolyte = inner(sigma_electrolyte*grad(u_electrolyte), grad(v_electrolyte))

bv_solid=- i0*(exp(alpha/(RT)*(u_solid-u_electrolyte-U_eq))-exp(-(1-alpha)/(RT)*(u_solid-u_electrolyte-U_eq)))

f=a_solid*(dx(5)+dx(6)+dx(7)+dx(8))+ bv_solid*v_solid*dx(6)-bv_solid*v_solid*dx(7)
g=a_electrolyte*(dx(6)+dx(7)+dx(9)) -bv_solid*v_electrolyte*dx(6)+bv_solid*v_electrolyte*dx(7)

F=f+g
u_n=TrialFunction(scalarMixed)

J  = derivative(F,u,u_n)
